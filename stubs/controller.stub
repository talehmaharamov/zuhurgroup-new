<?php

namespace App\Http\Controllers\Backend;

use App\Http\Controllers\Controller;
use App\Http\Helpers\CRUDHelper;
use App\Models\$controllerPhotos;
use App\Models\$controllerTranslation;
use Exception;
use Illuminate\Http\Request;
use App\Models\$controller;
use Illuminate\Support\Facades\DB;

class $controllerController extends Controller
{
    public function index()
    {
        check_permission('$name index');
        $$names = $controller::with('photos')->get();
        return view('backend.$name.index', get_defined_vars());
    }

    public function create()
    {
        check_permission('$name create');
        return view('backend.$name.create', get_defined_vars());
    }

    public function store(Request $request)
    {
        check_permission('$name create');
        try {
            $$name = new $controller();
            $$name->photo = upload('$name', $request->file('photo'));
            $$name->save();
            foreach (active_langs() as $lang) {
                $translation = new $controllerTranslation();
                $translation->locale = $lang->code;
                $translation->$name_id = $$name->id;
                $translation->name = $request->name[$lang->code];
                $translation->description = $request->description[$lang->code];
                $translation->save();
            }
            foreach (multi_upload('$name',$request->file('photos')) as $photo)
            {
                $$namePhoto = new $controllerPhotos();
                $$namePhoto->photo = $photo;
                $$name->photos()->save($namePhoto);
            };
            alert()->success(__('messages.success'));
            return redirect(route('backend.$name.index'));
        } catch (Exception $e) {
            alert()->error(__('backend.error'));
            return redirect(route('backend.$name.index'));
        }
    }

    public function edit(string $id)
    {
        check_permission('$name edit');
        $$name = $controller::where('id', $id)->with('photos')->first();
        return view('backend.$name.edit', get_defined_vars());
    }

    public function update(Request $request, string $id)
    {
        check_permission('$name edit');
        try {
            $$name = $controller::where('id', $id)->with('photos')->first();
            DB::transaction(function () use ($request, $$name) {
                if($request->hasFile('photo')){
                    if(file_exists($$name->photo)){
                        unlink(public_path($$name->photo));
                    }
                $$name->photo = upload('$name',$request->file('photo'));
                }
                if ($request->hasFile('photos')) {
                   foreach (multi_upload('$name', $request->file('photos')) as $photo) {
                   $$namePhoto = new $controllerPhotos();
                   $$namePhoto->photo = $photo;
                   $$name->photos()->save($$namePhoto);
                   }
                }
                foreach (active_langs() as $lang) {
                   $$name->translate($lang->code)->name = $request->name[$lang->code];
                   $$name->translate($lang->code)->description = $request->description[$lang->code];
                }
                $$name->save();
            });
            alert()->success(__('messages.success'));
            return redirect()->back();
        } catch (Exception $e) {
            alert()->error(__('backend.error'));
            return redirect()->back();
        }
    }

    public function status(string $id)
    {
        check_permission('$name edit');
        return CRUDHelper::status('\App\Models\$controller', $id);
    }

    public function delete(string $id)
    {
        check_permission('$name delete');
        return CRUDHelper::remove_item('\App\Models\$controller', $id);
    }
}
